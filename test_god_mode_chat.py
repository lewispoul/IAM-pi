#!/usr/bin/env python3
"""
Test GOD MODE Chat Integration
V√©rification que le chat IA reconna√Æt et utilise le mode GOD
"""

import requests
import json
import time
import os

def test_god_mode_chat():
    print("üî• TEST GOD MODE CHAT INTEGRATION üî•")
    print("=" * 50)
    
    # URL de base
    base_url = "http://localhost:5002"
    
    try:
        # 1. V√©rifier le statut GOD MODE
        print("1Ô∏è‚É£ V√©rification du statut GOD MODE...")
        response = requests.get(f"{base_url}/god_mode_status")
        status = response.json()
        
        print(f"   GOD MODE: {status.get('god_mode', False)}")
        print(f"   Acc√®s illimit√©: {status.get('unlimited_access', False)}")
        print(f"   OpenAI configur√©: {status.get('openai_configured', False)}")
        
        # 2. Activer GOD MODE si pas activ√©
        if not status.get('god_mode', False):
            print("\n2Ô∏è‚É£ Activation du GOD MODE...")
            response = requests.post(f"{base_url}/activate_god_mode", json={})
            result = response.json()
            
            if result.get('success', False):
                print("   ‚úÖ GOD MODE activ√© avec succ√®s!")
            else:
                print(f"   ‚ùå Erreur activation: {result.get('error', 'Inconnue')}")
                return False
        
        # 3. Test du chat avec GOD MODE
        print("\n3Ô∏è‚É£ Test du chat IA avec GOD MODE...")
        
        chat_messages = [
            "Salut ! Peux-tu me dire si tu as acc√®s aux fichiers ?",
            "Lis-moi le fichier README.md s'il te pla√Æt",
            "Peux-tu lister les fichiers du dossier IAM_Knowledge ?",
            "Ex√©cute la commande 'ls -la' pour moi"
        ]
        
        for i, message in enumerate(chat_messages, 1):
            print(f"\n   üì© Message {i}: {message}")
            
            chat_data = {
                "message": message,
                "image": None,
                "history": []
            }
            
            response = requests.post(f"{base_url}/chat", json=chat_data)
            
            if response.status_code == 200:
                result = response.json()
                
                if result.get('success', False):
                    chat_response = result.get('data', {}).get('response', '')
                    god_mode = result.get('data', {}).get('god_mode', False)
                    function_calling = result.get('data', {}).get('function_calling', False)
                    
                    print(f"   üî• GOD MODE: {'‚úÖ' if god_mode else '‚ùå'}")
                    print(f"   ‚ö° Function Calling: {'‚úÖ' if function_calling else '‚ùå'}")
                    print(f"   üí¨ R√©ponse: {chat_response[:100]}...")
                    
                    # V√©rifier si la r√©ponse contient des indications d'acc√®s aux fichiers
                    if any(keyword in chat_response.lower() for keyword in [
                        'acc√®s', 'fichier', 'dossier', 'commande', 'ex√©cuter', 'lire'
                    ]):
                        print("   ‚úÖ R√©ponse semble avoir acc√®s aux fichiers")
                    else:
                        print("   ‚ö†Ô∏è R√©ponse g√©n√©rique - possiblement pas d'acc√®s fichiers")
                        
                else:
                    print(f"   ‚ùå Erreur chat: {result.get('error', 'Inconnue')}")
                    
            else:
                print(f"   ‚ùå Erreur HTTP {response.status_code}: {response.text}")
            
            time.sleep(1)  # Pause entre les messages
        
        print("\n4Ô∏è‚É£ Test termin√©!")
        print("=" * 50)
        print("üîç Analyse des r√©sultats:")
        print("- Si GOD MODE = ‚úÖ et Function Calling = ‚úÖ ‚Üí Chat complet avec acc√®s fichiers")
        print("- Si GOD MODE = ‚úÖ et Function Calling = ‚ùå ‚Üí Chat basique avec indication GOD")
        print("- Si GOD MODE = ‚ùå ‚Üí Chat standard sans acc√®s sp√©cial")
        
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå Erreur: Impossible de se connecter au serveur")
        print("üí° Lancez d'abord: python IAM_AutonomousAgent_Final.py")
        return False
        
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

if __name__ == "__main__":
    test_god_mode_chat()
